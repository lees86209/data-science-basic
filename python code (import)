# data analysis
import numpy as np
import pandas as pd
import random as rnd

# visualization
import seaborn as sns
import matplotlib.pyplot as plt



# stock
import lxml
import yfinance as yf
from yahoofinancials import YahooFinancials

"""
stock = yf.Ticker('STOCK_NAME')
stockprice = stock.history(start = '2010-01-01', end = '2020-03-06')
stock.financials
stock.info
stock.balance_sheet
stock.history
tickers = 'STOCK_NAME'
yahoo_financials = YahooFinancials(tickers)
data = yahoo_financials.get_historical_price_data(start_date='2010-01-01', 
                                                  end_date='2019-12-31', 
                                                  time_interval='weekly')
                                                  
STOCK_NAME_df = pd.DataFrame(data['AAPL']['prices'])
STOCK_NAME_df = AAPL_df.drop('date', axis=1).set_index('formatted_date')
STOCK_NAME_df.head()

assets = ['TSLA', 'MSFT', 'FB']

yahoo_financials = YahooFinancials(assets)

data = yahoo_financials.get_historical_price_data(start_date='2019-01-01', 
                                                  end_date='2019-12-31', 
                                                  time_interval='weekly')                                                  
"""

# machine learning
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC, LinearSVC
from sklearn.ensemble import RandomForestClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.linear_model import Perceptron
from sklearn.linear_model import SGDClassifier
from sklearn.tree import DecisionTreeClassifier

""""""
# creat own function
def square(value):
  new_value = value ** 2
  return new_value

num = square(4)
#num = 16
""""""
""""""
#creat own function
Xfunction = lambda x, y: x ** y
Xfunction(2,3)
# 8
""""""

"""
while loop
"""

# if - elif - else
if abcd
  1234
elif abcd
  1234
else abcd

